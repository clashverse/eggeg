name: Step 0, Start

# This step triggers after the learner creates a new repository from the template
# This step sets STEP to 1
# This step closes <details id=0> and opens <details id=1>

# This will run every time we create push a commit to `main`
# Reference https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  workflow_dispatch:

# Reference https://docs.github.com/en/actions/security-guides/automatic-token-authentication
permissions:
  # Need `contents: read` to checkout the repository
  # Need `contents: write` to update the step metadata
  # Need `pull-requests: write` to create a pull request
  contents: write
  pull-requests: write

jobs:
  on_start:
    name: On start

    # We will only run this action when:
    # 1. This repository isn't the template repository
    # Reference https://docs.github.com/en/actions/learn-github-actions/contexts
    # Reference https://docs.github.com/en/actions/learn-github-actions/expressions
    if: ${{ !github.event.repository.is_template }}

    # We'll run Ubuntu for performance instead of Mac or Windows
    runs-on: ubuntu-latest

    steps:
      # We'll need to check out the repository so that we can edit the README
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Let's get all the branches

      # Create update-game branch, update game, and create pull request for the learner
      - name: Prepare a branch and pull request
        run: |
          echo "Make sure we are on step 0"
          if [ "$(cat .github/script/STEP)" != 0 ]
          then
            echo "Current step is not 0"
            exit 0
          fi

          echo "Make a branch"
          BRANCH=update-game
          git checkout -b $BRANCH

          echo "Update index.html"
          sed -i.bak 's/Game over/Game over, refresh to play again üßë‚Äçüíª ü§ñ!/' index.html

          echo "Make a commit"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add index.html
          git commit --message="Update game over message"

          echo "Push"
          git push --set-upstream origin $BRANCH

          echo "Make a pull request"
          # Reference https://cli.github.com/manual/gh_pr_create
          gh pr create --title "Update the game over message" --body "Update the game over message so people know how to play again!"

          echo "Restore main"
          git checkout main
          
          echo "Check that all required env variables are set"
          if [ -z "$TO_STEP" ]
          then
            echo "TO_STEP is unset or set to the empty string"
            exit 1
          fi
          if [ -z "$FROM_STEP" ]
          then
            echo "FROM_STEP is unset or set to the empty string"
            exit 1
          fi
          if [ -z "$GITHUB_TOKEN" ]
          then
            echo "GITHUB_TOKEN is unset or set to the empty string"
            exit 1
          fi
          echo "Make sure we are on the base branch ($BASE_BRANCH_NAME)"
          git checkout $BASE_BRANCH_NAME
          echo "Check that we are on FROM_STEP"
          if [ "$(cat .github/script/STEP)" != $FROM_STEP ]
          then
            echo "Current step is not $FROM_STEP"
            exit 0
          fi
          echo "Remove 'open' from any <details> tags"
          sed -i.tmp -r 's/<details id=([0-9X]+) open>/<details id=\1>/g' README.md
          echo "Add 'open' to step TO_STEP"
          sed -i.tmp -r "s/<details id=$TO_STEP>/<details id=$TO_STEP open>/g" README.md
          echo "Update all HTML comments to hide everything"
          sed -i.tmp -r 's/<!--step([0-9X]+)-->/<!--step\1/g' README.md
          sed -i.tmp -r 's/<!--endstep([0-9X]+)-->/endstep\1-->/g' README.md
          echo "Show the current TO_STEP"
          sed -i.tmp -r "s/<\!--step$TO_STEP/<\!--step$TO_STEP-->/g" README.md
          sed -i.tmp -r "s/endstep$TO_STEP-->/<\!--endstep$TO_STEP-->/g" README.md
          echo "Update the STEP file to TO_STEP"
          echo "$TO_STEP" > .github/script/STEP
          echo "Commit the files, and push to base branch"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add README.md
          git add .github/script/STEP
          git commit --message="Update to $TO_STEP in STEP and README.md"
          git push
          echo "If BRANCH_NAME, update that branch as well"
          if git show-ref --quiet refs/heads/$BRANCH_NAME
          then
            git checkout $BRANCH_NAME
            COMMIT_ID=$(git rev-parse main --verify HEAD)
            git cherry-pick $COMMIT_ID
            git push
          else
            echo "Branch $BRANCH_NAME does not exist"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FROM_STEP: 0
          TO_STEP: 1
          BRANCH_NAME: "update-game"
